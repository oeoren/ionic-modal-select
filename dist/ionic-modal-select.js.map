{"version":3,"sources":["webpack:///webpack/bootstrap 6764f83568604b138ef0","webpack:///./src/main.js","webpack:///./src/main.js?3479","webpack:///./src/ionic-modal-select.js","webpack:///./src/ionic-modal-select.js?666d","webpack:///./src/modal-template-multiple.html","webpack:///./src/modal-template.html"],"names":["angular","module","directive","compile","modalSelect","$compile","scope","iElement","iAttrs","x","$watch","$eval","value","html","contents","compileOnce","$ionicModal","$timeout","$filter","$parse","$templateCache","modalTemplateMultiple","require","modalTemplate","restrict","initialOptions","optionGetter","searchFilters","searchProperties","onSelect","onSearch","onReset","onClose","link","ngModelController","transclude","shortList","shortListBreak","parseInt","setFromProperty","optionProperty","onOptionSelect","clearSearchOnSelect","multiple","isChecked","multipleNullValue","ui","modalTitle","okButton","hideReset","resetButton","cancelButton","loadListMessage","modalClass","headerFooterClass","selectedClass","itemClass","searchTemplate","hasSearch","searchValue","searchPlaceholder","subHeaderClass","cancelSearchButton","allOptions","options","optionsExpression","match","Error","listExpr","listGetter","s","nv","ov","initialOptionsSetup","updateListMode","$watchCollection","copy","map","item","idx","opt","querySelector","name","message","toString","inner","element","Element","prototype","remove","parentNode","removeChild","notFound","useCollectionRepeat","length","$render","$viewValue","getSelectedValue","option","val","undefined","setOption","oldValue","$setViewValue","newValue","modal","hide","then","showList","setFilter","filterId","forEach","filter","id","active","query","unsetValue","isFunction","setValues","checkedItems","v","k","push","oldValues","vals","unsetValues","closeModal","compareValues","a","b","equals","modalTpl","fromTemplate","get","hiddenCb","$on","on","show","whatToSearch","filteredOpts","actual","expected","i","toLowerCase","indexOf","oldLen","newOpts","originalItem","find","it","clearSearch","copyOpt"],"mappings":"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","file":"ionic-modal-select.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6764f83568604b138ef0","\"use strict\";\n\nrequire(\"./ionic-modal-select.js\");\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import \"./ionic-modal-select.js\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\r\n * Copyright 2015 Inmagik SRL.\r\n * http://www.inmagik.com/\r\n *\r\n * ionic-modal-select, v1.3.2\r\n * Modal select directive for Ionic framework.\r\n *\r\n * By @bianchimro\r\n *\r\n * Licensed under the MIT license. Please see LICENSE for more information.\r\n *\r\n */\n\nangular.module('ionic-modal-select', []).directive('compile', compile).directive('modalSelect', modalSelect);\n\nfunction compile($compile) {\n\treturn function (scope, iElement, iAttrs) {\n\t\tvar x = scope.$watch(function (scope) {\n\t\t\t// watch the 'compile' expression for changes\n\t\t\treturn scope.$eval(iAttrs.compile);\n\t\t}, function (value) {\n\t\t\t// when the 'compile' expression changes\n\t\t\t// assign it into the current DOM\n\t\t\tiElement.html(value);\n\n\t\t\t// compile the new DOM and link it to the current\n\t\t\t// scope.\n\t\t\t// NOTE: we only compile .childNodes so that\n\t\t\t// we don't get into infinite loop compiling ourselves\n\t\t\t$compile(iElement.contents())(scope);\n\n\t\t\t//deactivate watch if \"compile-once\" is set to \"true\"\n\t\t\tif (iAttrs.compileOnce === 'true') {\n\t\t\t\tx();\n\t\t\t}\n\t\t});\n\t};\n}\n\nfunction modalSelect($ionicModal, $timeout, $filter, $parse, $templateCache) {\n\n\tvar modalTemplateMultiple = require('raw!./modal-template-multiple.html');\n\tvar modalTemplate = require('raw!./modal-template.html');\n\n\treturn {\n\t\trestrict: 'A',\n\t\trequire: 'ngModel',\n\t\tscope: {\n\t\t\tinitialOptions: \"=options\",\n\t\t\toptionGetter: \"&\",\n\t\t\tsearchFilters: \"=searchFilters\",\n\t\t\tsearchProperties: '=',\n\t\t\tonSelect: \"&\",\n\t\t\tonSearch: \"&\",\n\t\t\tonReset: \"&\",\n\t\t\tonClose: \"&\"\n\t\t},\n\t\tlink: function link(scope, iElement, iAttrs, ngModelController, transclude) {\n\n\t\t\tvar shortList = true;\n\t\t\tvar shortListBreak = iAttrs.shortListBreak ? parseInt(iAttrs.shortListBreak) : 10;\n\t\t\tvar setFromProperty = iAttrs.optionProperty;\n\t\t\tvar onOptionSelect = iAttrs.optionGetter;\n\t\t\tvar clearSearchOnSelect = iAttrs.clearSearchOnSelect !== \"false\" ? true : false;\n\t\t\tvar searchProperties = scope.searchProperties ? scope.searchProperties : false;\n\n\t\t\t//multiple values settings.\n\t\t\tvar multiple = iAttrs.multiple ? true : false;\n\t\t\tif (multiple) {\n\t\t\t\tscope.isChecked = {};\n\t\t\t}\n\t\t\tvar multipleNullValue = iAttrs.multipleNullValue ? scope.$eval(iAttrs.multipleNullValue) : [];\n\n\t\t\tscope.ui = {\n\t\t\t\tmodalTitle: iAttrs.modalTitle || 'Select an option',\n\t\t\t\tokButton: iAttrs.okButton || 'OK',\n\t\t\t\thideReset: iAttrs.hideReset !== \"true\" ? false : true,\n\t\t\t\tresetButton: iAttrs.resetButton || 'Reset',\n\t\t\t\tcancelButton: iAttrs.cancelButton || 'Cancel',\n\t\t\t\tloadListMessage: iAttrs.loadListMessage || 'Loading',\n\t\t\t\tmodalClass: iAttrs.modalClass || '',\n\t\t\t\theaderFooterClass: iAttrs.headerFooterClass || 'bar-stable',\n\t\t\t\tvalue: null,\n\t\t\t\tselectedClass: iAttrs.selectedClass || 'option-selected',\n\t\t\t\titemClass: iAttrs.itemClass || 'item item-text-wrap',\n\t\t\t\tsearchTemplate: iAttrs.searchTemplate || (multiple ? modalTemplateMultiple : modalTemplate),\n\n\t\t\t\t//search stuff\n\t\t\t\thasSearch: iAttrs.hasSearch !== \"true\" ? false : true,\n\t\t\t\tsearchValue: '',\n\t\t\t\tsearchPlaceholder: iAttrs.searchPlaceholder || 'Search',\n\t\t\t\tsubHeaderClass: iAttrs.subHeaderClass || 'bar-stable',\n\t\t\t\tcancelSearchButton: iAttrs.cancelSearchButton || 'Clear'\n\n\t\t\t};\n\n\t\t\tvar allOptions = [];\n\t\t\tscope.options = [];\n\n\t\t\tif (iAttrs.optionsExpression) {\n\t\t\t\tvar optionsExpression = iAttrs.optionsExpression;\n\t\t\t\tvar match = optionsExpression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\t\t\t\tif (!match) {\n\t\t\t\t\tthrow new Error(\"collection-repeat expected expression in form of '_item_ in \" + \"_collection_[ track by _id_]' but got '\" + iAttrs.optionsExpression + \"'.\");\n\t\t\t\t}\n\t\t\t\t//var keyExpr = match[1];\n\t\t\t\tvar listExpr = match[2];\n\t\t\t\tvar listGetter = $parse(listExpr);\n\t\t\t\tvar s = iElement.scope();\n\n\t\t\t\tscope.$watch(function () {\n\t\t\t\t\treturn listGetter(s);\n\t\t\t\t}, function (nv, ov) {\n\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\tupdateListMode();\n\t\t\t\t}, true);\n\t\t\t} else {\n\t\t\t\tscope.$watchCollection('initialOptions', function (nv) {\n\t\t\t\t\tinitialOptionsSetup(nv);\n\t\t\t\t\tupdateListMode();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//#TODO: this is due to different single vs multiple template\n\t\t\t//but adds lots of complexity here and in search\n\t\t\tfunction initialOptionsSetup(nv) {\n\t\t\t\tnv = nv || [];\n\t\t\t\tif (!multiple) {\n\t\t\t\t\tallOptions = angular.copy(nv);\n\t\t\t\t\tscope.options = angular.copy(nv);\n\t\t\t\t} else {\n\t\t\t\t\tallOptions = nv.map(function (item, idx) {\n\t\t\t\t\t\treturn [idx, angular.copy(item)];\n\t\t\t\t\t});\n\t\t\t\t\tscope.options = angular.copy(allOptions);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// getting options template\n\t\t\tvar opt = iElement[0].querySelector('.option');\n\t\t\tif (!opt) {\n\t\t\t\tthrow new Error({\n\t\t\t\t\tname: 'modalSelectError:noOptionTemplate',\n\t\t\t\t\tmessage: 'When using modalSelect directive you must include an element with class \"option\"\\n\\t\\t\\t\\t\\t\\t to provide a template for your select options.',\n\t\t\t\t\ttoString: function toString() {\n\t\t\t\t\t\treturn this.name + \" \" + this.message;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tscope.inner = angular.element(opt).html();\n\n\t\t\t//add support for .remove for older devices\n\t\t\tif (!('remove' in Element.prototype)) {\n\t\t\t\tElement.prototype.remove = function () {\n\t\t\t\t\tthis.parentNode.removeChild(this);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tangular.element(opt).remove();\n\n\t\t\tvar notFound = iElement[0].querySelector('.not-found');\n\t\t\tif (notFound) {\n\t\t\t\tscope.notFound = angular.element(notFound).html();\n\t\t\t\tangular.element(notFound).remove();\n\t\t\t}\n\n\t\t\tfunction updateListMode() {\n\t\t\t\t//shortList controls wether using ng-repeat instead of collection-repeat\n\t\t\t\tif (iAttrs.useCollectionRepeat === \"true\") {\n\t\t\t\t\tshortList = false;\n\t\t\t\t} else if (iAttrs.useCollectionRepeat === \"false\") {\n\t\t\t\t\tshortList = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof scope.options !== \"undefined\") {\n\t\t\t\t\t\tshortList = !!(scope.options.length < shortListBreak);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t}\n\n\t\t\tngModelController.$render = function () {\n\t\t\t\tscope.ui.value = ngModelController.$viewValue;\n\t\t\t};\n\n\t\t\tvar getSelectedValue = scope.getSelectedValue = function (option) {\n\t\t\t\tvar val = null;\n\t\t\t\tif (option === null || option === undefined) {\n\t\t\t\t\treturn option;\n\t\t\t\t}\n\t\t\t\tif (onOptionSelect) {\n\t\t\t\t\treturn scope.optionGetter({ option: option });\n\t\t\t\t}\n\t\t\t\tif (setFromProperty) {\n\t\t\t\t\tval = option[setFromProperty];\n\t\t\t\t} else {\n\t\t\t\t\tval = option;\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t};\n\n\t\t\tscope.setOption = function (option) {\n\t\t\t\tvar oldValue = ngModelController.$viewValue;\n\t\t\t\tvar val = getSelectedValue(option);\n\t\t\t\tngModelController.$setViewValue(val);\n\t\t\t\tngModelController.$render();\n\n\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\tscope.onSelect({ newValue: val, oldValue: oldValue });\n\t\t\t\t}\n\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\tscope.showList = false;\n\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\tif (clearSearchOnSelect) {\n\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// Filter object {id: <filterId>, active: <boolean>}\n\t\t\t// Used as auxiliary query params when querying server for search results\n\t\t\tscope.setFilter = function (filterId) {\n\t\t\t\tangular.forEach(scope.searchFilters, function (filter) {\n\t\t\t\t\tif (filter.id == filterId) {\n\t\t\t\t\t\tfilter.active = !filter.active;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilter.active = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Trigger another search when the search filters change\n\t\t\t\tif (scope.onSearch) {\n\t\t\t\t\tscope.onSearch({ query: scope.ui.searchValue });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.unsetValue = function () {\n\t\t\t\t$timeout(function () {\n\t\t\t\t\tngModelController.$setViewValue(\"\");\n\t\t\t\t\tngModelController.$render();\n\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\tscope.showList = false;\n\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tscope.setValues = function () {\n\t\t\t\tvar checkedItems = [];\n\t\t\t\tangular.forEach(scope.isChecked, function (v, k) {\n\t\t\t\t\tif (v) {\n\t\t\t\t\t\tcheckedItems.push(allOptions[k][1]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tvar oldValues = ngModelController.$viewValue;\n\t\t\t\tvar vals = checkedItems.map(function (item) {\n\t\t\t\t\treturn getSelectedValue(item);\n\t\t\t\t});\n\t\t\t\tngModelController.$setViewValue(vals);\n\t\t\t\tngModelController.$render();\n\n\t\t\t\tif (scope.onSelect) {\n\t\t\t\t\tscope.onSelect({ newValue: vals, oldValue: oldValues });\n\t\t\t\t}\n\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\tscope.showList = false;\n\t\t\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\t\t\tif (clearSearchOnSelect) {\n\t\t\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tscope.unsetValues = function () {\n\t\t\t\t$timeout(function () {\n\t\t\t\t\tngModelController.$setViewValue(multipleNullValue);\n\t\t\t\t\tngModelController.$render();\n\t\t\t\t\tscope.isChecked = {};\n\t\t\t\t\tscope.modal.hide();\n\t\t\t\t\tscope.showList = false;\n\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\n\t\t\t\t\t\tscope.onReset();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tscope.closeModal = function () {\n\t\t\t\tscope.modal.hide().then(function () {\n\t\t\t\t\tscope.showList = false;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tscope.compareValues = function (a, b) {\n\t\t\t\treturn angular.equals(a, b);\n\t\t\t};\n\n\t\t\t//loading the modal\n\t\t\tvar modalTpl = null;\n\t\t\tif (iAttrs.searchTemplate) {\n\t\t\t\tscope.modal = $ionicModal.fromTemplate($templateCache.get(iAttrs.searchTemplate), { scope: scope });\n\t\t\t} else {\n\t\t\t\tmodalTpl = multiple ? modalTemplateMultiple : modalTemplate;\n\t\t\t\tscope.modal = $ionicModal.fromTemplate(modalTpl, { scope: scope });\n\t\t\t}\n\n\t\t\tvar hiddenCb = null;\n\t\t\tscope.$on('$destroy', function () {\n\t\t\t\tif (hiddenCb) {\n\t\t\t\t\thiddenCb();\n\t\t\t\t\thiddenCb = null;\n\t\t\t\t}\n\t\t\t\tscope.modal.remove();\n\t\t\t});\n\n\t\t\tif (scope.onClose && angular.isFunction(scope.onClose)) {\n\t\t\t\thiddenCb = scope.$on('modal.hidden', function () {\n\t\t\t\t\tscope.onClose();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tiElement.on('click', function () {\n\t\t\t\tif (shortList) {\n\t\t\t\t\tscope.showList = true;\n\t\t\t\t\tscope.modal.show();\n\t\t\t\t} else {\n\t\t\t\t\tscope.modal.show().then(function () {\n\t\t\t\t\t\tscope.showList = true;\n\t\t\t\t\t\tscope.ui.shortList = shortList;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//filter function\n\t\t\tif (scope.ui.hasSearch) {\n\t\t\t\tscope.$watch('ui.searchValue', function (nv) {\n\t\t\t\t\tvar whatToSearch;\n\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\twhatToSearch = allOptions;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhatToSearch = allOptions.map(function (item) {\n\t\t\t\t\t\t\treturn item[1];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (iAttrs.onSearch) {\n\t\t\t\t\t\tscope.onSearch({ query: nv });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar filteredOpts = $filter('filter')(whatToSearch, nv, function (actual, expected) {\n\t\t\t\t\t\t\tif (!actual) {\n\t\t\t\t\t\t\t\t// if actual is an empty string, empty object, null, or undefined\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (searchProperties) {\n\t\t\t\t\t\t\t\tif ((typeof actual === 'undefined' ? 'undefined' : _typeof(actual)) == 'object') {\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < searchProperties.length; i++) {\n\t\t\t\t\t\t\t\t\t\tif (actual[searchProperties[i]] && actual[searchProperties[i]].toLowerCase().indexOf(expected.toLowerCase()) >= 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (actual.toString().toLowerCase().indexOf(expected.toLowerCase()) >= 0) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tvar oldLen = scope.options.length;\n\t\t\t\t\t\tif (!multiple) {\n\t\t\t\t\t\t\tscope.options = filteredOpts;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//#TODO: lots of loops here!\n\t\t\t\t\t\t\tvar newOpts = [];\n\t\t\t\t\t\t\tangular.forEach(filteredOpts, function (item) {\n\t\t\t\t\t\t\t\tvar originalItem = allOptions.find(function (it) {\n\t\t\t\t\t\t\t\t\treturn it[1] == item;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (originalItem) {\n\t\t\t\t\t\t\t\t\tnewOpts.push(originalItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tscope.options = newOpts;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (oldLen != scope.options.length) {\n\t\t\t\t\t\t\t//#todo: should resize scroll or scroll up here\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tscope.clearSearch = function () {\n\t\t\t\t\tscope.ui.searchValue = '';\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tscope.copyOpt = function (option) {\n\t\t\t\treturn angular.copy(option);\n\t\t\t};\n\n\t\t\t//#TODO ?: WRAP INTO $timeout?\n\t\t\tngModelController.$render();\n\t\t}\n\t};\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-modal-select.js","/*!\r\n * Copyright 2015 Inmagik SRL.\r\n * http://www.inmagik.com/\r\n *\r\n * ionic-modal-select, v1.3.2\r\n * Modal select directive for Ionic framework.\r\n *\r\n * By @bianchimro\r\n *\r\n * Licensed under the MIT license. Please see LICENSE for more information.\r\n *\r\n */\r\n\r\nangular.module('ionic-modal-select', [])\r\n.directive('compile', compile)\r\n.directive('modalSelect', modalSelect);\r\n\r\n\r\nfunction compile($compile) {\r\n\treturn function(scope, iElement, iAttrs) {\r\n\t\tvar x = scope.$watch(\r\n\t\t\tfunction(scope) {\r\n\t\t\t\t// watch the 'compile' expression for changes\r\n\t\t\t\treturn scope.$eval(iAttrs.compile);\r\n\t\t\t},\r\n\t\t\tfunction(value) {\r\n\t\t\t\t// when the 'compile' expression changes\r\n\t\t\t\t// assign it into the current DOM\r\n\t\t\t\tiElement.html(value);\r\n\r\n\t\t\t\t// compile the new DOM and link it to the current\r\n\t\t\t\t// scope.\r\n\t\t\t\t// NOTE: we only compile .childNodes so that\r\n\t\t\t\t// we don't get into infinite loop compiling ourselves\r\n\t\t\t\t$compile(iElement.contents())(scope);\r\n\r\n\t\t\t\t//deactivate watch if \"compile-once\" is set to \"true\"\r\n\t\t\t\tif (iAttrs.compileOnce === 'true') {\r\n\t\t\t\t\tx();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n}\r\n\r\n\r\nfunction modalSelect($ionicModal, $timeout, $filter, $parse, $templateCache ) {\r\n\r\n\t\tconst modalTemplateMultiple = require('raw!./modal-template-multiple.html');\r\n\t\tconst modalTemplate = require('raw!./modal-template.html');\r\n\r\n\t\treturn {\r\n\t\t\trestrict: 'A',\r\n\t\t\trequire : 'ngModel',\r\n\t\t\tscope: {\r\n\t\t\t\tinitialOptions:\"=options\",\r\n\t\t\t\toptionGetter:\"&\",\r\n\t\t\t\tsearchFilters: \"=searchFilters\",\r\n\t\t\t\tsearchProperties:'=',\r\n\t\t\t\tonSelect: \"&\",\r\n\t\t\t\tonSearch: \"&\",\r\n\t\t\t\tonReset: \"&\",\r\n\t\t\t\tonClose: \"&\",\r\n\t\t\t},\r\n\t\t\tlink: function (scope, iElement, iAttrs, ngModelController, transclude) {\r\n\r\n\t\t\t\tvar shortList = true;\r\n\t\t\t\tvar shortListBreak = iAttrs.shortListBreak ? parseInt(iAttrs.shortListBreak) : 10;\r\n\t\t\t\tvar setFromProperty= iAttrs.optionProperty;\r\n\t\t\t\tvar onOptionSelect = iAttrs.optionGetter;\r\n\t\t\t\tvar clearSearchOnSelect = iAttrs.clearSearchOnSelect !== \"false\" ? true : false;\r\n\t\t\t\tvar searchProperties = scope.searchProperties  ? scope.searchProperties : false;\r\n\r\n\t\t\t\t//multiple values settings.\r\n\t\t\t\tvar multiple = iAttrs.multiple  ? true : false;\r\n\t\t\t\tif (multiple) {\r\n\t\t\t\t\t\tscope.isChecked = {};\r\n\t\t\t\t}\r\n\t\t\t\tvar multipleNullValue = iAttrs.multipleNullValue ? scope.$eval(iAttrs.multipleNullValue) : [];\r\n\r\n\t\t\t\tscope.ui = {\r\n\t\t\t\t\tmodalTitle : iAttrs.modalTitle || 'Select an option',\r\n\t\t\t\t\tokButton : iAttrs.okButton || 'OK',\r\n\t\t\t\t\thideReset : iAttrs.hideReset  !== \"true\" ? false : true,\r\n\t\t\t\t\tresetButton : iAttrs.resetButton || 'Reset',\r\n\t\t\t\t\tcancelButton : iAttrs.cancelButton || 'Cancel',\r\n\t\t\t\t\tloadListMessage : iAttrs.loadListMessage || 'Loading',\r\n\t\t\t\t\tmodalClass : iAttrs.modalClass || '',\r\n\t\t\t\t\theaderFooterClass : iAttrs.headerFooterClass || 'bar-stable',\r\n\t\t\t\t\tvalue  : null,\r\n\t\t\t\t\tselectedClass : iAttrs.selectedClass || 'option-selected',\r\n\t\t\t\t\titemClass: iAttrs.itemClass || 'item item-text-wrap',\r\n\t\t\t\t\tsearchTemplate: iAttrs.searchTemplate || (multiple ? modalTemplateMultiple : modalTemplate),\r\n\r\n\t\t\t\t\t//search stuff\r\n\t\t\t\t\thasSearch : iAttrs.hasSearch  !== \"true\" ? false : true,\r\n\t\t\t\t\tsearchValue : '',\r\n\t\t\t\t\tsearchPlaceholder : iAttrs.searchPlaceholder || 'Search',\r\n\t\t\t\t\tsubHeaderClass : iAttrs.subHeaderClass || 'bar-stable',\r\n\t\t\t\t\tcancelSearchButton : iAttrs.cancelSearchButton || 'Clear'\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar allOptions = [];\r\n\t\t\t\tscope.options = [];\r\n\r\n\t\t\t\tif (iAttrs.optionsExpression) {\r\n\t\t\t\t\t\tvar optionsExpression = iAttrs.optionsExpression;\r\n\t\t\t\t\t\tvar match = optionsExpression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\r\n\t\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\t\t\tthrow new Error(\"collection-repeat expected expression in form of '_item_ in \" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"_collection_[ track by _id_]' but got '\" + iAttrs.optionsExpression + \"'.\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//var keyExpr = match[1];\r\n\t\t\t\t\t\tvar listExpr = match[2];\r\n\t\t\t\t\t\tvar listGetter = $parse(listExpr);\r\n\t\t\t\t\t\tvar s = iElement.scope();\r\n\r\n\t\t\t\t\t\tscope.$watch(\r\n\t\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\t\t\treturn listGetter(s);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t(nv, ov) => {\r\n\t\t\t\t\t\t\t\t\t\tinitialOptionsSetup(nv);\r\n\t\t\t\t\t\t\t\t\t\tupdateListMode();\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\tscope.$watchCollection('initialOptions', function(nv){\r\n\t\t\t\t\t\t\t\tinitialOptionsSetup(nv);\r\n\t\t\t\t\t\t\t\tupdateListMode();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//#TODO: this is due to different single vs multiple template\r\n\t\t\t\t//but adds lots of complexity here and in search\r\n\t\t\t\tfunction initialOptionsSetup(nv){\r\n\t\t\t\t\t\tnv = nv || [];\r\n\t\t\t\t\t\tif ( !multiple ) {\r\n\t\t\t\t\t\t\t\tallOptions = angular.copy(nv);\r\n\t\t\t\t\t\t\t\tscope.options = angular.copy(nv);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tallOptions = nv.map((item, idx) => [idx, angular.copy(item)] );\r\n\t\t\t\t\t\t\t\tscope.options = angular.copy(allOptions);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// getting options template\r\n\t\t\t\tvar opt = iElement[0].querySelector('.option');\r\n\t\t\t\tif (!opt) {\r\n\t\t\t\t\tthrow new Error({\r\n\t\t\t\t\t\tname:'modalSelectError:noOptionTemplate',\r\n\t\t\t\t\t\tmessage:`When using modalSelect directive you must include an element with class \"option\"\r\n\t\t\t\t\t\t to provide a template for your select options.`,\r\n\t\t\t\t\t\ttoString:function(){\r\n\t\t\t\t\t\t\treturn this.name + \" \" + this.message;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tscope.inner = angular.element(opt).html();\r\n\r\n\t\t\t\t//add support for .remove for older devices\r\n\t\t\t\tif (!('remove' in Element.prototype)) {\r\n\t\t\t\t\tElement.prototype.remove = function() {\r\n\t\t\t\t\t\tthis.parentNode.removeChild(this);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangular.element(opt).remove();\r\n\r\n\t\t\t\tvar notFound = iElement[0].querySelector('.not-found');\r\n\t\t\t\tif(notFound) {\r\n\t\t\t\t\tscope.notFound = angular.element(notFound).html();\r\n\t\t\t\t\tangular.element(notFound).remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction updateListMode(){\r\n\t\t\t\t\t//shortList controls wether using ng-repeat instead of collection-repeat\r\n\t\t\t\t\tif (iAttrs.useCollectionRepeat === \"true\") {\r\n\t\t\t\t\t\tshortList = false;\r\n\t\t\t\t\t} else if (iAttrs.useCollectionRepeat === \"false\") {\r\n\t\t\t\t\t\tshortList = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (typeof(scope.options) !==\"undefined\"){\r\n\t\t\t\t\t\t\tshortList = !!(scope.options.length < shortListBreak);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.ui.shortList = shortList;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tngModelController.$render = function(){\r\n\t\t\t\t\tscope.ui.value = ngModelController.$viewValue;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar getSelectedValue = scope.getSelectedValue = function(option){\r\n\t\t\t\t\tvar val = null;\r\n\t\t\t\t\tif (option === null || option === undefined) {\r\n\t\t\t\t\t\treturn option;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (onOptionSelect) {\r\n\t\t\t\t\t\treturn scope.optionGetter({option:option});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (setFromProperty) {\r\n\t\t\t\t\t\tval = option[setFromProperty];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tval = option;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn val;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tscope.setOption = function(option){\r\n\t\t\t\t\tvar oldValue = ngModelController.$viewValue;\r\n\t\t\t\t\tvar val = getSelectedValue(option);\r\n\t\t\t\t\tngModelController.$setViewValue(val);\r\n\t\t\t\t\tngModelController.$render();\r\n\r\n\t\t\t\t\tif (scope.onSelect) {\r\n\t\t\t\t\t\tscope.onSelect({ newValue: val, oldValue: oldValue });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tscope.modal.hide().then(function(){\r\n\t\t\t\t\t\tscope.showList = false;\r\n\t\t\t\t\t\tif (scope.ui.hasSearch) {\r\n\t\t\t\t\t\t\tif(clearSearchOnSelect) {\r\n\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Filter object {id: <filterId>, active: <boolean>}\r\n\t\t\t\t// Used as auxiliary query params when querying server for search results\r\n\t\t\t\tscope.setFilter = function(filterId) {\r\n\t\t\t\t\tangular.forEach(scope.searchFilters, function(filter) {\r\n\t\t\t\t\t\tif(filter.id == filterId) {\r\n\t\t\t\t\t\t\tfilter.active = !filter.active;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfilter.active = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// Trigger another search when the search filters change\r\n\t\t\t\t\tif(scope.onSearch) {\r\n\t\t\t\t\t\tscope.onSearch({query: scope.ui.searchValue});\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tscope.unsetValue = function(){\r\n\t\t\t\t\t$timeout(function(){\r\n\t\t\t\t\t\tngModelController.$setViewValue(\"\");\r\n\t\t\t\t\t\tngModelController.$render();\r\n\t\t\t\t\t\tscope.modal.hide();\r\n\t\t\t\t\t\tscope.showList = false;\r\n\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\r\n\t\t\t\t\t\t\tscope.onReset();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\tscope.setValues = function(){\r\n\t\t\t\t\t\tvar checkedItems = [];\r\n\t\t\t\t\t\tangular.forEach(scope.isChecked, function(v, k){\r\n\t\t\t\t\t\t\t\tif(v){\r\n\t\t\t\t\t\t\t\t\t\tcheckedItems.push(allOptions[k][1])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar oldValues = ngModelController.$viewValue;\r\n\t\t\t\t\t\tvar vals = checkedItems.map(function(item){\r\n\t\t\t\t\t\t\t\treturn getSelectedValue(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tngModelController.$setViewValue(vals);\r\n\t\t\t\t\t\tngModelController.$render();\r\n\r\n\t\t\t\t\t\tif (scope.onSelect) {\r\n\t\t\t\t\t\t\t\tscope.onSelect({ newValue: vals, oldValue: oldValues });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tscope.modal.hide().then(function(){\r\n\t\t\t\t\t\t\t\tscope.showList = false;\r\n\t\t\t\t\t\t\t\tif (scope.ui.hasSearch) {\r\n\t\t\t\t\t\t\t\t\t if(clearSearchOnSelect){\r\n\t\t\t\t\t\t\t\t\t\t\t\tscope.ui.searchValue = '';\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tscope.unsetValues = function(){\r\n\t\t\t\t\t\t$timeout(function(){\r\n\t\t\t\t\t\t\t\tngModelController.$setViewValue(multipleNullValue);\r\n\t\t\t\t\t\t\t\tngModelController.$render();\r\n\t\t\t\t\t\t\t\tscope.isChecked = {};\r\n\t\t\t\t\t\t\t\tscope.modal.hide();\r\n\t\t\t\t\t\t\t\tscope.showList = false;\r\n\t\t\t\t\t\t\t\tif (scope.onReset && angular.isFunction(scope.onReset)) {\r\n\t\t\t\t\t\t\t\t\t\tscope.onReset();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\tscope.closeModal = function(){\r\n\t\t\t\t\tscope.modal.hide().then(function(){\r\n\t\t\t\t\t\tscope.showList = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\tscope.compareValues = function(a, b){\r\n\t\t\t\t\treturn angular.equals(a, b);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t//loading the modal\r\n\t\t\t\tvar modalTpl = null;\r\n\t\t\t\tif(iAttrs.searchTemplate) {\r\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate(\r\n\t\t\t\t\t\t$templateCache.get(iAttrs.searchTemplate),\r\n\t\t\t\t\t\t{ scope: scope }\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmodalTpl = multiple ? modalTemplateMultiple : modalTemplate;\r\n\t\t\t\t\tscope.modal = $ionicModal.fromTemplate(\r\n\t\t\t\t\t\tmodalTpl,\r\n\t\t\t\t\t\t{ scope: scope }\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet hiddenCb = null;\r\n\t\t\t\tscope.$on('$destroy', function(){\r\n\t\t\t\t\tif(hiddenCb){\r\n\t\t\t\t\t\t\thiddenCb();\r\n\t\t\t\t\t\t\thiddenCb = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tscope.modal.remove();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (scope.onClose && angular.isFunction(scope.onClose)) {\r\n\t\t\t\t\thiddenCb = scope.$on('modal.hidden', function(){\r\n\t\t\t\t\t\tscope.onClose();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tiElement.on('click', function(){\r\n\t\t\t\t\tif (shortList) {\r\n\t\t\t\t\t\tscope.showList = true;\r\n\t\t\t\t\t\tscope.modal.show();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tscope.modal.show()\r\n\t\t\t\t\t\t\t.then(function(){\r\n\t\t\t\t\t\t\t\tscope.showList = true;\r\n\t\t\t\t\t\t\t\tscope.ui.shortList = shortList;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\t//filter function\r\n\t\t\t\tif (scope.ui.hasSearch) {\r\n\t\t\t\t\tscope.$watch('ui.searchValue', function(nv){\r\n\t\t\t\t\t\tvar whatToSearch;\r\n\t\t\t\t\t\tif ( !multiple  ) {\r\n\t\t\t\t\t\t\t\twhatToSearch = allOptions;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\twhatToSearch = allOptions.map(function(item){\r\n\t\t\t\t\t\t\t\t\t\treturn item[1];\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(iAttrs.onSearch) {\r\n\t\t\t\t\t\t\t\tscope.onSearch({query: nv});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar filteredOpts = $filter('filter')(whatToSearch, nv, function(actual, expected) {\r\n\t\t\t\t\t\t\t\tif(!actual){\r\n\t\t\t\t\t\t\t\t\t// if actual is an empty string, empty object, null, or undefined\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (searchProperties){\r\n\t\t\t\t\t\t\t\t\tif (typeof actual == 'object'){\r\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < searchProperties.length; i++){\r\n\t\t\t\t\t\t\t\t\t\t\tif (actual[searchProperties[i]] && actual[searchProperties[i]].toLowerCase().indexOf(expected.toLowerCase()) >= 0){\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif(actual.toString().toLowerCase().indexOf(expected.toLowerCase()) >= 0){\r\n\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tvar oldLen = scope.options.length;\r\n\t\t\t\t\t\t\tif ( !multiple ){\r\n\t\t\t\t\t\t\t\t\tscope.options = filteredOpts;\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//#TODO: lots of loops here!\r\n\t\t\t\t\t\t\t\t\tvar newOpts = [];\r\n\t\t\t\t\t\t\t\t\tangular.forEach(filteredOpts, function(item){\r\n\t\t\t\t\t\t\t\t\t\t\tvar originalItem = allOptions.find(function(it){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn it[1] == item;\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tif( originalItem ){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewOpts.push(originalItem);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tscope.options = newOpts;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(oldLen != scope.options.length){\r\n\t\t\t\t\t\t\t\t//#todo: should resize scroll or scroll up here\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tscope.clearSearch = function(){\r\n\t\t\t\t\t\tscope.ui.searchValue = '';\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.copyOpt = option => {\r\n\t\t\t\t\treturn angular.copy(option);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//#TODO ?: WRAP INTO $timeout?\r\n\t\t\t\tngModelController.$render();\r\n\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ionic-modal-select.js","module.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\r\\n\\r\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\r\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\r\\n    </ion-header-bar>\\r\\n\\r\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\r\\n      <label class=\\\"item-input-wrapper\\\">\\r\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\r\\n        <input type=\\\"search\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\r\\n      </label>\\r\\n      <button type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\r\\n        {{ ui.cancelSearchButton }}\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\r\\n    <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\r\\n        <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\r\\n        <p>\\r\\n            <ion-spinner></ion-spinner>\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n    <div ng-if=\\\"showList\\\">\\r\\n        <!--collection-repeat mode -->\\r\\n        <!-- not working right now -->\\r\\n        <!--\\r\\n        <div ng-if=\\\"!ui.shortList\\\" >\\r\\n            <div class=\\\"list\\\" class=\\\"animate-if\\\" >\\r\\n                <div\\r\\n                    class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\r\\n                     collection-repeat=\\\"optionm in options track by $index\\\">\\r\\n                    <label class=\\\"checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\r\\n                    </label>\\r\\n\\r\\n                    <div compile=\\\"inner\\\" ng-init=\\\"option=optionm[1]\\\" compile-once=\\\"false\\\"></div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        -->\\r\\n\\r\\n        <!-- ng-repeat mode -->\\r\\n        <div ng-if=\\\"ui.shortList || true\\\">\\r\\n            <div class=\\\"list\\\">\\r\\n                <div\\r\\n                  class=\\\"item item-checkbox\\\" ng-class=\\\"ui.itemClass\\\"\\r\\n                  ng-repeat=\\\"optionm in options track by optionm[0]\\\">\\r\\n                    <label class=\\\"checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" ng-checked=\\\"optionm['checked']\\\" ng-model=\\\"isChecked[optionm[0]]\\\">\\r\\n                    </label>\\r\\n                    <div ng-init=\\\"option=optionm[1]\\\" compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    </ion-content>\\r\\n    <ion-footer-bar ng-class=\\\"::ui.headerFooterClass\\\">\\r\\n        <button class=\\\"button button-stable\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\r\\n        <div class=\\\"title\\\" style=\\\"padding-top:6px\\\">\\r\\n            <button class=\\\"button button-navbar\\\" ng-click=\\\"setValues()\\\">OK</button>\\r\\n        </div>\\r\\n        <button ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValues()\\\">{{ui.resetButton}}</button>\\r\\n    </ion-footer-bar>\\r\\n</ion-modal-view>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/modal-template-multiple.html\n// module id = 2\n// module chunks = 0","module.exports = \" <ion-modal-view class=\\\"ionic-select-modal\\\" ng-class=\\\"::ui.modalClass\\\">\\r\\n\\r\\n    <ion-header-bar ng-class=\\\"::ui.headerFooterClass\\\">\\r\\n      <h1 class=\\\"title\\\">{{::ui.modalTitle}}</h1>\\r\\n    </ion-header-bar>\\r\\n\\r\\n    <div class=\\\"bar bar-subheader item-input-inset\\\" ng-class=\\\"::ui.subHeaderClass\\\" ng-if=\\\"ui.hasSearch\\\">\\r\\n      <label class=\\\"item-input-wrapper\\\">\\r\\n        <i class=\\\"icon ion-ios-search placeholder-icon\\\"></i>\\r\\n        <input type=\\\"search\\\" placeholder=\\\"{{::ui.searchPlaceholder}}\\\" ng-model=\\\"ui.searchValue\\\">\\r\\n      </label>\\r\\n      <button type=\\\"button\\\" class=\\\"button button-clear\\\" ng-click=\\\"clearSearch()\\\">\\r\\n        {{ ui.cancelSearchButton }}\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <ion-content class=\\\"has-header\\\" ng-class=\\\"{'has-subheader':ui.hasSearch}\\\">\\r\\n        <div class=\\\"text-center\\\" ng-if=\\\"!ui.shortList && !showList\\\" style=\\\"padding-top:40px;\\\">\\r\\n            <h4 class=\\\"muted\\\">{{::ui.loadListMessage}}</h4>\\r\\n            <p>\\r\\n                <ion-spinner></ion-spinner>\\r\\n            </p>\\r\\n        </div>\\r\\n        <div ng-if=\\\"showList\\\">\\r\\n            <div ng-if=\\\"!ui.shortList\\\">\\r\\n                <div class=\\\"list\\\" ng-if=\\\"showList\\\" class=\\\"animate-if\\\">\\r\\n                    <div\\r\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\"\\r\\n                      collection-repeat=\\\"option in options track by $index\\\"\\r\\n                      ng-click=\\\"setOption(option)\\\"\\r\\n                      ng-class=\\\"{'{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\r\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div ng-if=\\\"ui.shortList\\\">\\r\\n                <div class=\\\"list\\\">\\r\\n                    <div\\r\\n                      ng-repeat=\\\"option in options track by $index\\\"\\r\\n                      ng-click=\\\"setOption(option)\\\"\\r\\n                      ng-class=\\\"{ '{{::ui.itemClass}}' : true, '{{::ui.selectedClass}}': compareValues(getSelectedValue(option), ui.value) }\\\">\\r\\n                        <div compile=\\\"inner\\\" compile-once=\\\"true\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div ng-if=\\\"notFound && options.length == 0\\\">\\r\\n            <div compile=\\\"notFound\\\" compile-once=\\\"true\\\" ng-click=\\\"closeModal()\\\"></div>\\r\\n        </div>\\r\\n\\r\\n    </ion-content>\\r\\n\\r\\n    <ion-footer-bar ng-class=\\\"::ui.headerFooterClass\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"button button-stable modal-select-close-button\\\" ng-click=\\\"closeModal()\\\">{{ui.cancelButton}}</button>\\r\\n        <button type=\\\"button\\\" ng-if=\\\"::!ui.hideReset\\\" class=\\\"button button-stable\\\" ng-click=\\\"unsetValue()\\\">{{ui.resetButton}}</button>\\r\\n    </ion-footer-bar>\\r\\n\\r\\n</ion-modal-view>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/modal-template.html\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}