!function(e){function n(o){if(t[o])return t[o].exports;var i=t[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n,t){"use strict";t(1)},function(e,n,t){"use strict";function o(e){return function(n,t,o){var i=n.$watch(function(e){return e.$eval(o.compile)},function(r){t.html(r),e(t.contents())(n),"true"===o.compileOnce&&i()})}}function i(e,n,o,i,s){var a=t(2),l=t(3);return{restrict:"A",require:"ngModel",scope:{initialOptions:"=options",optionGetter:"&",searchFilters:"=searchFilters",searchProperties:"=",onSelect:"&",onSearch:"&",onReset:"&",onClose:"&"},link:function(t,c,u,d,p){function h(e){e=e||[],w?(V=e.map(function(e,n){return[n,angular.copy(e)]}),t.options=angular.copy(V)):(V=angular.copy(e),t.options=angular.copy(e))}function m(){"true"===u.useCollectionRepeat?f=!1:"false"===u.useCollectionRepeat?f=!0:"undefined"!=typeof t.options&&(f=!!(t.options.length<v)),t.ui.shortList=f}var f=!0,v=u.shortListBreak?parseInt(u.shortListBreak):10,g=u.optionProperty,b=u.optionGetter,S="false"!==u.clearSearchOnSelect,y=!!t.searchProperties&&t.searchProperties,w=!!u.multiple;w&&(t.isChecked={});var C=u.multipleNullValue?t.$eval(u.multipleNullValue):[];t.ui={modalTitle:u.modalTitle||"Select an option",okButton:u.okButton||"OK",hideReset:"true"===u.hideReset,resetButton:u.resetButton||"Reset",cancelButton:u.cancelButton||"Cancel",loadListMessage:u.loadListMessage||"Loading",modalClass:u.modalClass||"",headerFooterClass:u.headerFooterClass||"bar-stable",value:null,selectedClass:u.selectedClass||"option-selected",itemClass:u.itemClass||"item item-text-wrap",searchTemplate:u.searchTemplate||(w?a:l),hasSearch:"true"===u.hasSearch,searchValue:"",searchPlaceholder:u.searchPlaceholder||"Search",subHeaderClass:u.subHeaderClass||"bar-stable",cancelSearchButton:u.cancelSearchButton||"Clear"};var V=[];if(t.options=[],u.optionsExpression){var k=u.optionsExpression,$=k.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!$)throw new Error("collection-repeat expected expression in form of '_item_ in _collection_[ track by _id_]' but got '"+u.optionsExpression+"'.");var L=$[2],x=i(L),B=c.scope();t.$watch(function(){return x(B)},function(e,n){h(e),m()},!0)}else t.$watchCollection("initialOptions",function(e){h(e),m()});var F=c[0].querySelector(".option");if(!F)throw new Error({name:"modalSelectError:noOptionTemplate",message:'When using modalSelect directive you must include an element with class "option"\n\t\t\t\t\t\t to provide a template for your select options.',toString:function(){return this.name+" "+this.message}});t.inner=angular.element(F).html(),"remove"in Element.prototype||(Element.prototype.remove=function(){this.parentNode.removeChild(this)}),angular.element(F).remove();var R=c[0].querySelector(".not-found");R&&(t.notFound=angular.element(R).html(),angular.element(R).remove()),d.$render=function(){t.ui.value=d.$viewValue};var O=t.getSelectedValue=function(e){var n=null;return null===e||void 0===e?e:b?t.optionGetter({option:e}):n=g?e[g]:e};t.setOption=function(e){var n=d.$viewValue,o=O(e);d.$setViewValue(o),d.$render(),t.onSelect&&t.onSelect({newValue:o,oldValue:n}),t.modal.hide().then(function(){t.showList=!1,t.ui.hasSearch&&S&&(t.ui.searchValue="")})},t.setFilter=function(e){angular.forEach(t.searchFilters,function(n){n.id==e?n.active=!n.active:n.active=!1}),t.onSearch&&t.onSearch({query:t.ui.searchValue})},t.unsetValue=function(){n(function(){d.$setViewValue(""),d.$render(),t.modal.hide(),t.showList=!1,t.onReset&&angular.isFunction(t.onReset)&&t.onReset()})},t.setValues=function(){var e=[];angular.forEach(t.isChecked,function(n,t){n&&e.push(V[t][1])});var n=d.$viewValue,o=e.map(function(e){return O(e)});d.$setViewValue(o),d.$render(),t.onSelect&&t.onSelect({newValue:o,oldValue:n}),t.modal.hide().then(function(){t.showList=!1,t.ui.hasSearch&&S&&(t.ui.searchValue="")})},t.unsetValues=function(){n(function(){d.$setViewValue(C),d.$render(),t.isChecked={},t.modal.hide(),t.showList=!1,t.onReset&&angular.isFunction(t.onReset)&&t.onReset()})},t.closeModal=function(){t.modal.hide().then(function(){t.showList=!1})},t.compareValues=function(e,n){return angular.equals(e,n)};var E=null;u.searchTemplate?t.modal=e.fromTemplate(s.get(u.searchTemplate),{scope:t}):(E=w?a:l,t.modal=e.fromTemplate(E,{scope:t}));var T=null;t.$on("$destroy",function(){T&&(T(),T=null),t.modal.remove()}),t.onClose&&angular.isFunction(t.onClose)&&(T=t.$on("modal.hidden",function(){t.onClose()})),c.on("click",function(){f?(t.showList=!0,t.modal.show()):t.modal.show().then(function(){t.showList=!0,t.ui.shortList=f})}),t.ui.hasSearch&&(t.$watch("ui.searchValue",function(e){var n;if(n=w?V.map(function(e){return e[1]}):V,u.onSearch)t.onSearch({query:e});else{var i=o("filter")(n,e,function(e,n){if(!e)return!1;if(y){if("object"==("undefined"==typeof e?"undefined":r(e)))for(var t=0;t<y.length;t++)if(e[y[t]]&&e[y[t]].toLowerCase().indexOf(n.toLowerCase())>=0)return!0;return!1}return e.toString().toLowerCase().indexOf(n.toLowerCase())>=0}),s=t.options.length;if(w){var a=[];angular.forEach(i,function(e){var n=V.find(function(n){return n[1]==e});n&&a.push(n)}),t.options=a}else t.options=i;s!=t.options.length}}),t.clearSearch=function(){t.ui.searchValue=""}),t.copyOpt=function(e){return angular.copy(e)},d.$render()}}}o.$inject=["$compile"],i.$inject=["$ionicModal","$timeout","$filter","$parse","$templateCache"];var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};/*!
	 * Copyright 2015 Inmagik SRL.
	 * http://www.inmagik.com/
	 *
	 * ionic-modal-select, v1.3.2
	 * Modal select directive for Ionic framework.
	 *
	 * By @bianchimro
	 *
	 * Licensed under the MIT license. Please see LICENSE for more information.
	 *
	 */
angular.module("ionic-modal-select",[]).directive("compile",o).directive("modalSelect",i)},function(e,n){e.exports=' <ion-modal-view class="ionic-select-modal" ng-class="::ui.modalClass">\r\n\r\n    <ion-header-bar ng-class="::ui.headerFooterClass">\r\n      <h1 class="title">{{::ui.modalTitle}}</h1>\r\n    </ion-header-bar>\r\n\r\n    <div class="bar bar-subheader item-input-inset" ng-class="::ui.subHeaderClass" ng-if="ui.hasSearch">\r\n      <label class="item-input-wrapper">\r\n        <i class="icon ion-ios-search placeholder-icon"></i>\r\n        <input type="search" placeholder="{{::ui.searchPlaceholder}}" ng-model="ui.searchValue">\r\n      </label>\r\n      <button type="button" class="button button-clear" ng-click="clearSearch()">\r\n        {{ ui.cancelSearchButton }}\r\n      </button>\r\n    </div>\r\n\r\n    <ion-content class="has-header" ng-class="{\'has-subheader\':ui.hasSearch}">\r\n    <div class="text-center" ng-if="!ui.shortList && !showList" style="padding-top:40px;">\r\n        <h4 class="muted">{{::ui.loadListMessage}}</h4>\r\n        <p>\r\n            <ion-spinner></ion-spinner>\r\n        </p>\r\n    </div>\r\n\r\n    <div ng-if="showList">\r\n        <!--collection-repeat mode -->\r\n        <!-- not working right now -->\r\n        <!--\r\n        <div ng-if="!ui.shortList" >\r\n            <div class="list" class="animate-if" >\r\n                <div\r\n                    class="item item-checkbox" ng-class="ui.itemClass"\r\n                     collection-repeat="optionm in options track by $index">\r\n                    <label class="checkbox">\r\n                        <input type="checkbox" ng-model="isChecked[optionm[0]]">\r\n                    </label>\r\n\r\n                    <div compile="inner" ng-init="option=optionm[1]" compile-once="false"></div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        -->\r\n\r\n        <!-- ng-repeat mode -->\r\n        <div ng-if="ui.shortList || true">\r\n            <div class="list">\r\n                <div\r\n                  class="item item-checkbox" ng-class="ui.itemClass"\r\n                  ng-repeat="optionm in options track by optionm[0]">\r\n                    <label class="checkbox">\r\n                        <input type="checkbox" ng-checked="optionm[\'checked\']" ng-model="isChecked[optionm[0]]">\r\n                    </label>\r\n                    <div ng-init="option=optionm[1]" compile="inner" compile-once="true"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </ion-content>\r\n    <ion-footer-bar ng-class="::ui.headerFooterClass">\r\n        <button class="button button-stable" ng-click="closeModal()">{{ui.cancelButton}}</button>\r\n        <div class="title" style="padding-top:6px">\r\n            <button class="button button-navbar" ng-click="setValues()">OK</button>\r\n        </div>\r\n        <button ng-if="::!ui.hideReset" class="button button-stable" ng-click="unsetValues()">{{ui.resetButton}}</button>\r\n    </ion-footer-bar>\r\n</ion-modal-view>\r\n'},function(e,n){e.exports=' <ion-modal-view class="ionic-select-modal" ng-class="::ui.modalClass">\r\n\r\n    <ion-header-bar ng-class="::ui.headerFooterClass">\r\n      <h1 class="title">{{::ui.modalTitle}}</h1>\r\n    </ion-header-bar>\r\n\r\n    <div class="bar bar-subheader item-input-inset" ng-class="::ui.subHeaderClass" ng-if="ui.hasSearch">\r\n      <label class="item-input-wrapper">\r\n        <i class="icon ion-ios-search placeholder-icon"></i>\r\n        <input type="search" placeholder="{{::ui.searchPlaceholder}}" ng-model="ui.searchValue">\r\n      </label>\r\n      <button type="button" class="button button-clear" ng-click="clearSearch()">\r\n        {{ ui.cancelSearchButton }}\r\n      </button>\r\n    </div>\r\n\r\n    <ion-content class="has-header" ng-class="{\'has-subheader\':ui.hasSearch}">\r\n        <div class="text-center" ng-if="!ui.shortList && !showList" style="padding-top:40px;">\r\n            <h4 class="muted">{{::ui.loadListMessage}}</h4>\r\n            <p>\r\n                <ion-spinner></ion-spinner>\r\n            </p>\r\n        </div>\r\n        <div ng-if="showList">\r\n            <div ng-if="!ui.shortList">\r\n                <div class="list" ng-if="showList" class="animate-if">\r\n                    <div\r\n                      ng-class="{ \'{{::ui.itemClass}}\' : true, \'{{::ui.selectedClass}}\': compareValues(getSelectedValue(option), ui.value) }"\r\n                      collection-repeat="option in options track by $index"\r\n                      ng-click="setOption(option)"\r\n                      ng-class="{\'{{::ui.selectedClass}}\': compareValues(getSelectedValue(option), ui.value) }">\r\n                        <div compile="inner" compile-once="true"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div ng-if="ui.shortList">\r\n                <div class="list">\r\n                    <div\r\n                      ng-repeat="option in options track by $index"\r\n                      ng-click="setOption(option)"\r\n                      ng-class="{ \'{{::ui.itemClass}}\' : true, \'{{::ui.selectedClass}}\': compareValues(getSelectedValue(option), ui.value) }">\r\n                        <div compile="inner" compile-once="true"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div ng-if="notFound && options.length == 0">\r\n            <div compile="notFound" compile-once="true" ng-click="closeModal()"></div>\r\n        </div>\r\n\r\n    </ion-content>\r\n\r\n    <ion-footer-bar ng-class="::ui.headerFooterClass">\r\n        <button type="button" class="button button-stable modal-select-close-button" ng-click="closeModal()">{{ui.cancelButton}}</button>\r\n        <button type="button" ng-if="::!ui.hideReset" class="button button-stable" ng-click="unsetValue()">{{ui.resetButton}}</button>\r\n    </ion-footer-bar>\r\n\r\n</ion-modal-view>\r\n'}]);
//# sourceMappingURL=ionic-modal-select.min.js.map